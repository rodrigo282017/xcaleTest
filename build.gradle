plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'checkstyle'
}

group = 'com.xcale'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	testRuntimeOnly "com.h2database:h2:2.2.224"

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('checkstyleMain', Checkstyle) {
    description 'Runs Checkstyle inspection on main files.'
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
	classpath = files()
	source ='src/main/java'
	showViolations = true
	ignoreFailures = false
}

tasks.named('checkstyleTest', Checkstyle) {
	description 'Runs Checkstyle inspection on test files.'
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
	classpath = files()
	source ='src/test/java'
	showViolations = true
	ignoreFailures = true
}
